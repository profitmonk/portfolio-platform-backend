"""Add social features: posts, comments, likes, user follows, preferences, feed events

Revision ID: 04c963d66174
Revises: ecf4c4978b97
Create Date: 2025-07-08 13:41:35.896467

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '04c963d66174'
down_revision: Union[str, None] = 'ecf4c4978b97'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('likeable_type', sa.Enum('POST', 'COMMENT', 'PORTFOLIO', name='likeabletype'), nullable=False),
    sa.Column('likeable_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'likeable_type', 'likeable_id', name='_user_like_uc')
    )
    op.create_index(op.f('ix_likes_id'), 'likes', ['id'], unique=False)
    op.create_table('user_follows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('following_id', sa.Integer(), nullable=False),
    sa.Column('followed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['following_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('follower_id', 'following_id', name='_user_follow_uc')
    )
    op.create_index(op.f('ix_user_follows_id'), 'user_follows', ['id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('investment_style', sa.Enum('GROWTH', 'VALUE', 'DIVIDEND', 'TECH', 'CRYPTO', 'ESG', 'INDEX', name='investmentstyle'), nullable=True),
    sa.Column('risk_tolerance', sa.Enum('CONSERVATIVE', 'MODERATE', 'AGGRESSIVE', name='risktolerance'), nullable=True),
    sa.Column('preferred_sectors', sa.JSON(), nullable=True),
    sa.Column('feed_algorithm_weights', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_type', sa.Enum('PORTFOLIO', 'TEXT', 'IMAGE', 'AUTO_PERFORMANCE', 'AUTO_NEW_HOLDING', 'AUTO_MILESTONE', name='posttype'), nullable=False),
    sa.Column('content_text', sa.Text(), nullable=True),
    sa.Column('portfolio_id', sa.Integer(), nullable=True),
    sa.Column('holding_id', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('auto_generated', sa.Boolean(), nullable=True),
    sa.Column('visibility', sa.Enum('PUBLIC', 'FOLLOWERS', 'PRIVATE', name='visibility'), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('comment_count', sa.Integer(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['holding_id'], ['holdings.id'], ),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_table('feed_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('target_user_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.Enum('VIEW', 'LIKE', 'COMMENT', 'SHARE', 'PORTFOLIO_VIEW', 'FOLLOW', name='eventtype'), nullable=False),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feed_events_id'), 'feed_events', ['id'], unique=False)
    op.add_column('holdings', sa.Column('announced_publicly', sa.Boolean(), nullable=True))
    op.add_column('holdings', sa.Column('performance_alert_threshold', sa.Float(), nullable=True))
    op.add_column('portfolios', sa.Column('like_count', sa.Integer(), nullable=True))
    op.add_column('portfolios', sa.Column('comment_count', sa.Integer(), nullable=True))
    op.add_column('portfolios', sa.Column('view_count', sa.Integer(), nullable=True))
    op.add_column('portfolios', sa.Column('share_count', sa.Integer(), nullable=True))
    op.add_column('portfolios', sa.Column('engagement_score', sa.Float(), nullable=True))
    op.add_column('portfolios', sa.Column('featured_by_user', sa.Boolean(), nullable=True))
    op.add_column('portfolios', sa.Column('trending_score', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('follower_count', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('following_count', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('creator_status', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('featured_portfolio_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('bio_extended', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('social_links', sa.JSON(), nullable=True))
    op.add_column('users', sa.Column('total_engagement_score', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('verified_investor', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'users', 'portfolios', ['featured_portfolio_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'verified_investor')
    op.drop_column('users', 'total_engagement_score')
    op.drop_column('users', 'social_links')
    op.drop_column('users', 'bio_extended')
    op.drop_column('users', 'featured_portfolio_id')
    op.drop_column('users', 'creator_status')
    op.drop_column('users', 'following_count')
    op.drop_column('users', 'follower_count')
    op.drop_column('portfolios', 'trending_score')
    op.drop_column('portfolios', 'featured_by_user')
    op.drop_column('portfolios', 'engagement_score')
    op.drop_column('portfolios', 'share_count')
    op.drop_column('portfolios', 'view_count')
    op.drop_column('portfolios', 'comment_count')
    op.drop_column('portfolios', 'like_count')
    op.drop_column('holdings', 'performance_alert_threshold')
    op.drop_column('holdings', 'announced_publicly')
    op.drop_index(op.f('ix_feed_events_id'), table_name='feed_events')
    op.drop_table('feed_events')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_posts_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_user_follows_id'), table_name='user_follows')
    op.drop_table('user_follows')
    op.drop_index(op.f('ix_likes_id'), table_name='likes')
    op.drop_table('likes')
    # ### end Alembic commands ###
